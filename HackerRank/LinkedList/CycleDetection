/*
Detect a cycle in a linked list. Note that the head pointer may be 'null' if the list is empty.

A Node is defined as: 
    class Node {
        int data;
        Node next;
    }
*/
boolean hasCycle(Node head) {
    
    Node firstP = head;
    Node secondP = head;
    
    if(head ==null) return false;
    while(secondP.next.next!=null)
    {
        firstP = firstP.next;
        secondP = secondP.next.next;
        
        if(firstP==secondP)
        {
            return true;
        }            
    }    
    return false;
}
